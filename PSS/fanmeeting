//correct 다시 풀어볼것 * 카라츠바 곱셈 문제
//이문제에서는 자리올림이 필요없어서 주석처리함
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
using namespace std;

void normalize(vector<int>& num)
{
	num.push_back(0);
	for (int i = 0; i < num.size(); i++)
	{
		if (num[i] < 0) {
			int borrow = (abs(num[i]) + 9) / 10;
			num[i + 1] -= borrow;
			num[i] += borrow * 10;
		}
		else if (num[i] > 0) {
			num[i + 1] += num[i] / 10;
			num[i] %= 10;
		}
	}
	if (num.back() == 0)num.pop_back();
}

void addTo(vector<int>& a, vector<int>& b, int k)
{
	a.resize(max(a.size(), b.size() + k));
	for (int i = 0; i < b.size(); i++)a[i + k] += b[i];
//	normalize(a);
}

void subFrom(vector<int>& a, vector<int>& b)
{
	a.resize(max(a.size(), b.size() + 1));
	for (int i = 0; i < b.size(); i++)a[i] -= b[i];
//	normalize(a);
}

vector<int> multiply(const vector<int>& a, const vector<int>& b)
{
	vector<int> c(a.size() + b.size() + 1, 0);
	for (int i = 0; i < a.size(); i++)
		for (int j = 0; j < b.size(); j++)
			c[i + j] += a[i] * b[j];
	return c;
	//normalize(c);
}

vector<int> karatsuba(const vector<int>& a, const vector<int>& b)
{
	int an = a.size(), bn = b.size();
	if (an < bn)return karatsuba(b, a);
	if (an == 0 || bn == 0)return vector<int>();
	if (an <= 50)return multiply(a, b);
	int half = an / 2;

	vector<int> a0(a.begin(), a.begin() + half);
	vector<int> a1(a.begin() + half, a.end());
	vector<int> b0(b.begin(), b.begin() + min<int>(b.size(), half));
	vector<int> b1(b.begin() + min<int>(b.size(), half), b.end());
	vector<int> z2 = karatsuba(a1, b1);
	vector<int> z0 = karatsuba(a0, b0);
	addTo(a0, a1, 0); addTo(b0, b1, 0);
	vector<int> z1 = karatsuba(a0, b0);
	subFrom(z1, z0);
	subFrom(z1, z2);
	vector<int> ret;
	addTo(ret, z0, 0);
	addTo(ret, z1, half);
	addTo(ret, z2, half + half);
	return ret;
}

int main()
{
	freopen("1.inp", "r", stdin);
	freopen("1.out", "w", stdout);
	int t,result;
	string a, b;
	cin >> t;
	getchar();
	for (int test = 0; test < t; test++)
	{
		result = 0;
		getline(cin, a);
		getline(cin, b);
		vector<int> v1(a.size()), v2(b.size());
		for (int i = 0; i < a.size(); i++)v1[i]=(a[i] == 'M');
		for (int i = 0; i < b.size(); i++)v2[b.size()-i-1]=(b[i] == 'M');
		vector<int> v3 = karatsuba(v1, v2);
		for (int i = a.size()-1; i < b.size(); i++)result += (v3[i] == 0);
		cout << result << "\n";
	}
}
